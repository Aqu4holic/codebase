<snippet>
	<content><![CDATA[struct DSU{
	vector <int> root, Rank;
	int cnt;

	DSU (int x){
		root.assign(x + 5, 0);
		Rank.assign(x + 5, 1);
		cnt = x;
		iota(all(root), 0);
	}

	int findr(int x){
		return (x == root[x] ? x : root[x] = findr(root[x]));
	}

	int size(int x){
		return(Rank[findr(x)]);
	}

	int unique(){
		return cnt;
	}

	bool same(int x, int y){
		return (findr(x) == findr(y));
	}

	bool merge(int x, int y){
		x = findr(x);
		y = findr(y);

		if (x == y) return 0;
		
		if (Rank[x] < Rank[y]) swap(x, y);

		Rank[x] += Rank[y];
		root[y] = x;

		--cnt;

		return 1;
	}
};]]></content>
	<tabTrigger>dsu</tabTrigger>
	<description>DSU for C++</description>
	<scope>source.c++, source.c</scope>
</snippet>
